war_tax_decision = {
	picture = {
		reference = "gfx/interface/illustrations/decisions/decision_realm.dds"
	}
	decision_group_type = major
	desc = war_tax_decision_desc
	selection_tooltip = war_tax_decision_tooltip
	cooldown = { days = 3650 }
	is_shown = {
		is_landed = yes
		is_at_war = yes
	}
	is_valid = {}

	cost = {
		prestige = { value = 250 }
	}

	effect = {
		if = {
			limit = {
				has_trait = compassionate
			}
			stress_impact = {
				compassionate = medium_stress_impact_gain
			}
		}
		trigger_event = ftr_war_tax.0001
	}
	
	ai_check_interval = 365
	ai_potential = {
		always = yes
	}
	ai_will_do = {
		base = -50
		modifier = {
			add = 30
			has_trait = greedy
		}
		modifier = {
			add = 30
			gold < -200
		}
		modifier = {
			add = 100
			gold < -500
		}
		modifier = {
			add = -20
			has_trait = just
		}
		modifier = {
			add = -20
			has_trait = compassionate
		}
	}
}

#feudal_convert_to_centralism_decision = {
#	picture = {
#		reference = "gfx/interface/illustrations/decisions/decision_realm.dds"
#	}
#	decision_group_type = major
#	desc = feudal_convert_to_centralism_decision_desc
#	selection_tooltip = feudal_convert_to_centralism_decision_tooltip
#	cooldown = { days = 3650 }
#	is_shown = {
#		is_landed = yes
#		OR = {
#			government_has_flag = government_is_feudal
#			government_has_flag = government_is_clan
#		}
#		primary_title.tier >= tier_kingdom
#	}
#	is_valid = {
#		is_independent_ruler = yes
#		#is_ai = no
#		OR = {
#			has_realm_law = crown_authority_2
#			has_realm_law = crown_authority_3
#		}
#		custom_description = {
#			text = "ftr_have_enough_bureaucracy_value_tt"
#			value = ftr_reform_to_centralism_bureaucracy_gap_value
#			ftr_bureaucracy_value >= ftr_reform_to_centralism_bureaucracy_gap_value
#		}
#		custom_tooltip = {
#			text = all_powerful_vassals_required_tt
#			any_powerful_vassal = {
#				count = all
#				opinion = {
#					target = root
#					value >= 50
#				}
#			}
#		}
#	}
#
#	cost = {
#		prestige = { value = 1000 }
#	}
#
#	effect = {
#		hidden_effect = {
#			save_scope_as = liege
#			every_vassal = {
#				trigger_event = {
#					id = ftr_realm_event.1001
#					days = 3
#				}
#			}
#			trigger_event = {
#				id = ftr_realm_event.1002
#			}
#		}
#		change_government = centralism_government
#		add_realm_law = autocracy_succession_law
#		stress_impact = {
#			content = medium_stress_impact_gain
#		}
#	}
#	
#	ai_check_interval = 3
#	ai_potential = {
#		always = yes
#	}
#	ai_will_do = {
#		base = 20
#	}
#}

ftr_end_tyrant_succession_decision = {
	picture = {
		reference = "gfx/interface/illustrations/decisions/decision_realm.dds"
	}
	decision_group_type = major
	desc = ftr_end_tyrant_succession_decision_desc
	selection_tooltip = ftr_end_tyrant_succession_decision_tooltip
	is_shown = {
		is_independent_ruler = yes
		has_realm_law = acclamation_succession_law
		NOT = {
			culture = {
				has_innovation = innovation_primogeniture
			}
		}
	}
	is_valid = {
		OR = {
			prestige_level >= 4
			AND = {
				prestige_level >= 2
				dynasty.dynasty_prestige_level >= 5
			}
		}
		custom_tooltip = {
			text = all_powerful_vassals_required_tt
			any_powerful_vassal = {
				count = all
				opinion = {
					target = root
					value >= 50
				}
			}
		}
		is_at_war = no
	}

	cost = {
		prestige = { value = 2000 }
		gold = { value = 750 }
	}

	effect = {
		save_scope_as = liege_c
		remove_realm_law = acclamation_succession_law
		add_realm_law = single_heir_succession_law
		hidden_effect = {
			send_interface_toast = {
				type = event_generic_neutral
				title = liege_adapt_autocracy_succession_law_title
				desc = liege_adapt_autocracy_succession_law_desc
				right_icon = root
			}
			every_vassal = {
				limit = { is_ai = no }
				send_interface_message = {
					type = event_generic_neutral
					title = liege_adapt_autocracy_succession_law_title
					desc = liege_adapt_autocracy_succession_law_desc
					right_icon = root
				}
			}
		}
	}
	
	ai_check_interval = 35
	ai_potential = {
		always = yes
	}
	ai_will_do = {
		base = 20
	}
}

#################### OVERRIDE ###########################
ftr_settle_the_steppe_decision = { # for unindependent Nomad
	picture = {
		reference = "gfx/interface/illustrations/event_story/mpo_steppe_region.dds"
	} 
	decision_group_type = nomad_major

	ai_check_interval = 360

	desc = settle_the_steppe_decision_desc
	selection_tooltip = settle_the_steppe_decision_tooltip

	is_shown = {
		has_mpo_dlc_trigger = yes
		government_has_flag = government_is_nomadic
		is_playable_character = yes
	}

	is_valid = {
		AND = {
			is_independent_ruler = no
			liege = {
				NOT = { government_has_flag = government_is_nomadic }
			}
		}
		capital_county = {
			title_province = {
				OR = { 
					has_holding_type = nomad_holding 
					has_holding_type = herder_holding 
				}
			}
		}
		custom_tooltip = {
			text = step_away_from_the_steppe_decision_holding_tt
			any_sub_realm_county = {
				title_province = {
					OR = { 
						has_holding_type = nomad_holding 
						has_holding_type = herder_holding 
					}
				}
			}
		}
	}

	is_valid_showing_failures_only = {
		is_at_war = no
		is_available = yes
	}

	widget = {
		gui = "decision_view_widget_option_list_generic"
		controller = decision_option_list_controller
		decision_to_second_step_button = "CHOOSE_GOVERNMENT_NEXT_STEP_BUTTON"
		show_from_start = yes

		item = {
			value = become_tribal_decision
			current_description = become_tribal_decision
			localization = become_tribal_decision
			icon = "gfx/interface/icons/government_types/tribal_government.dds"
			ai_chance = {
				value = 0
			}
		}

		item = {
			value = become_feudal_decision
			current_description = become_feudal_decision
			localization = become_feudal_decision
			icon = "gfx/interface/icons/government_types/feudal_government.dds"
			is_valid = {
				is_independent_ruler = no
				liege = {
					government_has_flag = government_is_feudal
				}
			}
			ai_chance = {
				value = 100
			}
		}

		item = {
			value = become_clan_decision
			current_description = become_clan_decision
			localization = become_clan_decision
			icon = "gfx/interface/icons/government_types/clan_government.dds"
			is_valid = {
				is_independent_ruler = no
				liege = {
					government_has_flag = government_is_clan
				}
			}
			ai_chance = {
				value = 100
			}
		}

		item = {
			value = become_admin_decision
			current_description = become_admin_decision
			localization = become_admin_decision
			icon = "gfx/interface/icons/government_types/administrative_government.dds"
			is_valid = {
				is_independent_ruler = no
				liege = {
					government_has_flag = government_is_administrative
				}
			}
			ai_chance = {
				value = 100
			}
		}

	}

	cost = {
		gold = {
			value = {
				if = {
					limit = {
						scope:become_tribal_decision = yes
					}
					every_sub_realm_county = {
						limit = {
							title_province = {
								OR = { 
									has_holding_type = nomad_holding 
									has_holding_type = herder_holding 
								}
							}
						}
						add = 5
					}
				}
				else_if = {
					limit = {
						OR = {
							scope:become_feudal_decision = yes
							scope:become_clan_decision = yes
							scope:become_admin_decision = yes
						}
					}
					every_sub_realm_county = {
						limit = {
							title_province = {
								OR = { 
									has_holding_type = nomad_holding 
									has_holding_type = herder_holding 
								}
							}
						}
						add = 25
					}
				}
			}
		}
		prestige = {
			value = major_prestige_value
		}
	}

	effect = {
		# MPO ACHIEVEMENT Settling In
		if = {
			limit = { is_ai = no }
			add_achievement_global_variable_effect = {
				VARIABLE = mpo_settling_in_achievement_unlocked
				VALUE = yes
			}
		}
		save_scope_as = nomad_settling_down
		domicile.domicile_culture = { save_scope_as = invading_culture }
		domicile.domicile_faith = { save_scope_as = invading_faith }
		save_scope_value_as = {
			name = invading_herd_value
			value = domicile.herd
		}
		save_scope_value_as = {
			name = development_herd_value
			value = domicile.herd
		}
		nomad_domicile_refund_effect = yes
		nomad_convert_herds_to_gold_special_troops_effect = yes
		
		show_as_tooltip = {
			if = {
				limit= {
					scope:become_tribal_decision = yes
				}
				change_government = tribal_government
			}
			else_if = {
				limit= {
					scope:become_feudal_decision = yes
				}
				change_government = feudal_government
			}
			else_if = {
				limit= {
					scope:become_clan_decision = yes
				}
				change_government = clan_government
			}
			else_if = {
				limit= {
					scope:become_admin_decision = yes
				}
				change_government = administrative_government
			}
		}
		
		custom_tooltip = nomad_holdings_convert_tt
		custom_tooltip = nomad_vassals_convert_tt
		custom_tooltip = buildings_based_on_herd_tt
		custom_tooltip = development_based_on_herd_tt
		
		hidden_effect = {
			#Nuke tribal authorities.
			if = {
				limit = { has_realm_law = nomadic_authority_1 }
				remove_realm_law = nomadic_authority_1
			}
			if = {
				limit = { has_realm_law = nomadic_authority_2 }
				remove_realm_law = nomadic_authority_2
			}
			if = {
				limit = { has_realm_law = nomadic_authority_3 }
				remove_realm_law = nomadic_authority_3
			}
			if = {
				limit = { has_realm_law = nomadic_authority_4 }
				remove_realm_law = nomadic_authority_4
			}
			if = {
				limit = { has_realm_law = nomadic_authority_5 }
				remove_realm_law = nomadic_authority_5
			}
			if = {
				limit = {
					scope:become_tribal_decision = yes
				}
				every_sub_realm_county = {
					limit = {
						title_province = {
							OR = { 
								has_holding_type = nomad_holding 
								has_holding_type = herder_holding 
							}
						}
					}
					title_province = {
						set_holding_type = tribal_holding
					}
					add_to_list = holding_conversion
				}
				change_government = tribal_government
				every_vassal_or_below = {
					limit = {
						has_government = nomad_government
					}
					#Nuke tribal authorities.
					if = {
						limit = { has_realm_law = nomadic_authority_1 }
						remove_realm_law = nomadic_authority_1
					}
					if = {
						limit = { has_realm_law = nomadic_authority_2 }
						remove_realm_law = nomadic_authority_2
					}
					if = {
						limit = { has_realm_law = nomadic_authority_3 }
						remove_realm_law = nomadic_authority_3
					}
					if = {
						limit = { has_realm_law = nomadic_authority_4 }
						remove_realm_law = nomadic_authority_4
					}
					if = {
						limit = { has_realm_law = nomadic_authority_5 }
						remove_realm_law = nomadic_authority_5
					}
					change_government = tribal_government
					if = {
						limit = {
							NOT = { has_realm_law = tribal_authority_1 }
						}
						add_realm_law_skip_effects = tribal_authority_1
					}
				}
				#Start off tribal authorities.
				if = {
					limit = {
						NOT = { has_realm_law = tribal_authority_2 }
					}
					add_realm_law_skip_effects = tribal_authority_2
				}
			}
			if = {
				limit = {
					OR = {
						scope:become_feudal_decision = yes
						scope:become_clan_decision = yes
						scope:become_admin_decision = yes
					}
				}
				every_sub_realm_county = {
					limit = {
						title_province = {
							OR = { 
								has_holding_type = nomad_holding 
								has_holding_type = herder_holding 
							}
						}
					}
					title_province = {
						set_holding_type = castle_holding
					}
					add_to_list = holding_conversion
					random_county_province = {
						limit = {
							has_holding = no
							barony_cannot_construct_holding = no
						}
						random = {
							chance = 50
							modifier = {
								add = 50
								this.county = root.capital_county
							}
							modifier = {
								add = 25
								scope:become_feudal_decision = yes
							}
							modifier = {
								add = {
									value = scope:invading_herd_value
									divide = 1000
								}
							}
							set_holding_type = city_holding
						}
					}
					random_county_province = {
						limit = {
							has_holding = no
							barony_cannot_construct_holding = no
						}
						random = {
							chance = 50
							modifier = {
								add = 50
								this.county = root.capital_county
							}
							modifier = {
								add = 50
								barony = {
									is_holy_site_of = root.faith
								}
							}
							modifier = {
								add = 25
								scope:become_clan_decision = yes
							}
							modifier = {
								add = {
									value = scope:invading_herd_value
									divide = 1000
								}
							}
							set_holding_type = church_holding
						}
					}
				}
				if = {
					limit = {
						scope:become_feudal_decision = yes
					}
					change_government = feudal_government
				}
				else_if = {
					limit = {
						scope:become_clan_decision = yes
					}
					change_government = clan_government
				}
				else_if = {
					limit = {
						scope:become_admin_decision = yes
					}
					change_government = administrative_government
				}
				every_vassal_or_below = {
					limit = {
						has_government = nomad_government
					}
					#Nuke tribal authorities.
					if = {
						limit = { has_realm_law = nomadic_authority_1 }
						remove_realm_law = nomadic_authority_1
					}
					if = {
						limit = { has_realm_law = nomadic_authority_2 }
						remove_realm_law = nomadic_authority_2
					}
					if = {
						limit = { has_realm_law = nomadic_authority_3 }
						remove_realm_law = nomadic_authority_3
					}
					if = {
						limit = { has_realm_law = nomadic_authority_4 }
						remove_realm_law = nomadic_authority_4
					}
					if = {
						limit = { has_realm_law = nomadic_authority_5 }
						remove_realm_law = nomadic_authority_5
					}
					if = {
						limit = {
							scope:become_feudal_decision = yes
						}
						change_government = feudal_government
					}
					else_if = {
						limit = {
							scope:become_clan_decision = yes
						}
						change_government = clan_government
					}
					else_if = {
						limit = {
							scope:become_admin_decision = yes
						}
						change_government = administrative_government
					}
					#Start off crown authorities.
					if = {
						limit = {
							NOT = { has_realm_law = crown_authority_1 }
						}
						add_realm_law_skip_effects = crown_authority_1
					}
				}
				#Start off crown authorities.
				if = {
					limit = {
						NOT = { has_realm_law = crown_authority_2 }
					}
					add_realm_law_skip_effects = crown_authority_2
				}
			}
			while = {
				limit = {
					scope:invading_herd_value >= 2000
				}
				every_in_list = {
					list = holding_conversion
					every_county_province = {
						generate_building = yes
					}
				}
				save_scope_value_as = {
					name = invading_herd_value
					value = {
						add = scope:invading_herd_value
						subtract = 2000
					}
				}
			}
			if = {
				limit = {
					scope:become_tribal_decision = yes
				}
				while = {
					limit = {
						scope:development_herd_value >= 2000
					}
					random_sub_realm_county = {
						weight = {
							base = 1
							modifier = {
								add = 9
								this = root.capital_county
							}
							modifier = {
								add = 6
								any_neighboring_county = {
									this = root.capital_county
								}
							}
							modifier = {
								factor = 1
								is_coastal_county = yes
							}
						}
						change_development_level = 1
					}
					save_scope_value_as = {
						name = development_herd_value
						value = {
							add = scope:development_herd_value
							subtract = 2000
						}
					}
				}
			}
			else = {
				while = {
					limit = {
						scope:development_herd_value >= 1000
					}
					random_sub_realm_county = {
						weight = {
							base = 1
							modifier = {
								add = 9
								this = root.capital_county
							}
							modifier = {
								add = 6
								any_neighboring_county = {
									this = root.capital_county
								}
							}
							modifier = {
								factor = 1
								is_coastal_county = yes
							}
						}
						change_development_level = 1
					}
					save_scope_value_as = {
						name = development_herd_value
						value = {
							add = scope:development_herd_value
							subtract = 1000
						}
					}
				}
			}
		}
		
	}

	ai_potential = {
		NOR = {
			has_trait = greatest_of_khans
			has_trait = conqueror
		}
		OR = {
			AND = {
				OR = {
					has_realm_law = nomadic_authority_4
					has_realm_law = nomadic_authority_5
				}
				culture = {
					has_cultural_tradition = tradition_ruling_caste
				}
			}
			is_independent_ruler = no
		}
		NOT = {
			any_vassal_or_below = {
				is_ai = no
			}
		}
	}

	ai_will_do = {
		base = 10
	}
}
#################### OVERRIDE ###########################




######### Buy Land ############
ftr_buy_land_interaction = {
	category = interaction_category_diplomacy
	common_interaction = yes
	ignores_pending_interaction_block = no
	desc = ftr_buy_land_interaction_desc
	greeting = positive
	notification_text = ftr_buy_land_interaction_text
	target_type = title
	target_filter = recipient_realm_titles
	ai_targets = {
		ai_recipients = vassals
		ai_recipients = neighboring_rulers
		max = 5
	}
	icon = icon_gold
	ai_frequency = 48
	cooldown_against_recipient = { years = 10 }

	is_shown = {
		NOT = { scope:actor = scope:recipient}
		scope:actor.primary_title.tier >= tier_county
		scope:recipient.primary_title.tier >= tier_county
		OR = {
			AND = {
				scope:actor = {
					is_independent_ruler = yes
				}
				scope:recipient = {
					is_independent_ruler = yes
				}
			}
			scope:recipient = {
				is_vassal_of = scope:actor
			}
		}
	}
	is_valid_showing_failures_only = {
		scope:actor = {
			is_at_war = no
		}
		scope:recipient = {
			is_at_war = no
		}
	}
	can_be_picked_title = {
		scope:target = {
			custom_description = {
				text = only_county_can_be_trade_text
				tier = tier_county
			}
			trigger_if = {
				limit = {
					NOR = {
						scope:actor = {
							is_vassal_of = scope:recipient
						}
						scope:recipient = {
							is_vassal_of = scope:actor
						}
					}
				}
				custom_description = {
					text = is_neighbor_to_realm_text
					is_neighbor_to_realm = scope:actor
				}
			}
			custom_description = {
				text = capital_cannot_be_trade_text
				NOT = { this = scope:recipient.capital_county }
			}
		}
	}

	send_option = {
		flag = half_price
		localization = "FTR_NEGO_HALF_PRICE"
	}
	send_option = {
		flag = normal_price
		localization = "FTR_NEGO_NORMAL_PRICE"
		starts_enabled = { always = yes	}
	}
	send_option = {
		flag = double_price
		localization = "FTR_NEGO_DOUBLE_PRICE"
	}
	send_option = {
		flag = three_times_price
		localization = "FTR_NEGO_THREE_TIMES_PRICE"
	}
	send_option = {
		flag = four_times_price
		localization = "FTR_NEGO_FOUR_TIMES_PRICE"
	}
	send_option = {
		flag = five_times_price
		localization = "FTR_NEGO_FIVE_TIMES_PRICE"
	}
	send_options_exclusive = yes

	on_accept = {
		hidden_effect = {
			scope:actor = {
				send_interface_message = {
					type = event_title_good
					title = ftr_buy_county_notify_title
					right_icon = scope:recipient
					show_as_tooltip = {
						ftr_buy_land_effect = yes
					}
				}
			}
			scope:recipient = {
				send_interface_message = {
					type = event_title_good
					title = ftr_buy_county_notify_title
					right_icon = scope:actor
					show_as_tooltip = {
						ftr_buy_land_effect = yes
					}
				}
			}
		}
		ftr_buy_land_effect = yes
	}

	ai_accept = {
		base = -20
		opinion_modifier = {
			opinion_target = scope:actor
			who = scope:recipient
			multiplier = 0.2
		}
		modifier = {
			add = -40
			scope:recipient = {
				domain_size <= domain_limit
			}
			desc = "FTR_BUY_LAND_DOMAIN_SIZE_FEW"
		}
		modifier = {
			add = {
				value = gold
				multiply = -0.1
				min = -100
			}
			scope:recipient = {
				gold > 200
			}
			desc = "FTR_BUY_LAND_RICH_ENOUGH"
		}
		modifier = {
			add = 40
			scope:recipient = {
				domain_size > domain_limit
			}
			desc = "FTR_BUY_LAND_DOMAIN_SIZE_OVER"
		}
		modifier = {
			add = {
				value = scope:recipient.debt_level
				multiply = 20
			}
			scope:recipient.debt_level >= 1
			desc = "FTR_BUY_LAND_IN_DEBT"
		}
		modifier = {
			add = {
				value = 20
				multiply = ftr_payment_cost_level_value
			}
			scope:target = { tier = tier_county }
			desc = "FTR_BUY_LAND_MONEY_REASON"
		}
		modifier = {
			add = -50
			scope:recipient = {
				any_held_title = {
					tier >= tier_duchy
					scope:target = {
						de_jure_liege = PREV
					}
				}
			}
			desc = "FTR_BUY_LAND_DEJURE"
		}
		modifier = {
			add = -20
			NOT = { scope:actor.faith = scope:recipient.faith }
			desc = "FTR_BUY_LAND_RELIGION_DIFFERENCE"
		}
	}
	ai_will_do = {
		base = -20
		modifier = {
			add = 10
			scope:actor = {
				gold > ftr_buy_land_cost_value
			}
		}
		modifier = {
			add = -40
			scope:actor = {
				domain_size >= domain_limit
			}
		}
		modifier = {
			add = 20
			scope:actor = {
				domain_size < domain_limit
			}
		}
		modifier = {
			add = -100
			scope:actor = {
				government_has_flag = government_is_centralism
				is_independent_ruler = no
			}
		}
		modifier = {
			add = 20
			scope:target = {
				de_jure_liege = scope:actor.primary_title
				NOT = {
					de_jure_liege = scope:recipient.primary_title
				}
			}
		}
		modifier = {
			add = -10
			scope:target = {
				NOT = {
					de_jure_liege = scope:actor.primary_title
				}
			}
		}
		modifier = {
			add = -10
			scope:recipient = {
				is_vassal_of = scope:actor
			}
		}
	}
}

##### BREAK ALLIANCE #####
ftr_break_alliance_interaction = {
	category = interaction_category_diplomacy
	common_interaction = yes
	ignores_pending_interaction_block = no
	desc = ftr_break_alliance_interaction_desc
	#greeting = negative
	#notification_text = ftr_break_alliance_interaction_text
	#icon = icon_liege
	ai_targets = {
		ai_recipients = liege
		ai_recipients = vassals
		ai_recipients = neighboring_rulers
		ai_recipients = peer_vassals
		max = 5
	}
	ai_frequency = 48

	is_shown = {
		NOT = { scope:actor = scope:recipient}
		scope:actor = {
			is_allied_to = scope:recipient
			is_landed = yes
		}
		scope:recipient = {
			is_landed = yes
		}
	}
	is_valid_showing_failures_only = {}

	on_accept = {
		scope:actor = {
			break_alliance = scope:recipient
		}
		scope:recipient = {
			show_as_tooltip = {
				add_opinion = {
					target = scope:actor
					modifier = ftr_break_alliance_opinion
				}
			}
			trigger_event = ftr_interaction_event.1003
		}
		if = {
			limit = {
				scope:actor = { government_has_flag = government_is_clan }
				scope:actor.house = scope:recipient.house
			}
			scope:actor.house = {
				add_unity_value = {
					value = major_unity_loss
					character = root
					desc = ftr_clan_unity_break_allience_change.desc
				}
			}
		}
	}

	auto_accept = yes
	ai_accept = {}

	ai_will_do = {
		base = -40
		modifier = {
			add = 30
			scope:actor = {
				opinion = {
					target = scope:recipient
					value <= 0
				}
			}
		}
		modifier = {
			add = 20
			NOT = { scope:actor.faith = scope:recipient.faith }
		}
		modifier = {
			add = 20
			scope:actor = {
				any_claim = {
					holder = scope:recipient
				}
			}
		}
	}
}

######### Send Envoy ##########
ftr_send_envoy_interaction = {
	category = interaction_category_diplomacy
	common_interaction = yes
	greeting = positive
	notification_text = ftr_send_envoy_interaction_text
	desc = ftr_send_envoy_interaction_desc
	#ai_maybe = yes
	ai_frequency = 48
	ai_targets = {
		ai_recipients = liege
		ai_recipients = vassals
		ai_recipients = neighboring_rulers
		ai_recipients = peer_vassals
		max = 5
	}
	cooldown_against_recipient = { years = 10 }

	is_shown = {
		OR = {
			scope:recipient = { is_vassal_of = scope:actor }
			scope:actor = {
				is_landed = yes
				is_independent_ruler = yes
				character_is_realm_neighbor = scope:recipient
			}
			scope:actor = {
				liege = scope:recipient.liege
				NOT = { this = scope:recipient.liege }
				NOT = { liege = scope:recipient }
				is_landed = yes
			}
		}
		scope:actor = {
			primary_title.tier >= tier_county
		}
		scope:recipient = {
			primary_title.tier >= tier_county
			is_landed = yes
			NOT = { this = scope:actor }
		}
	}
	is_valid_showing_failures_only = {
		scope:recipient = {
			is_at_war = no
			is_imprisoned = no
		}
		scope:actor = {
			is_imprisoned = no
		}
	}
	populate_actor_list = {
		scope:actor = {
			every_courtier = {
				limit = {
					OR = {
						is_councillor_of = scope:actor
						AND = {
							is_heir_of = scope:actor
							is_capable_adult = yes
							is_imprisoned = no
						}
					}
				}
				add_to_list = characters
			}
			every_vassal = {
				limit = {
					OR = {
						is_councillor_of = scope:actor
						AND = {
							is_heir_of = scope:actor
							is_capable_adult = yes
							is_imprisoned = no
						}
					}
					NOT = { this = scope:recipient }
				}
				add_to_list = characters
			}
		}
	}
	can_be_picked = {
		is_available = yes
		is_at_home = yes
		NOT = { is_diarch_of_target = scope:actor }
	}

	options_heading = ftr_envoy_types_tt
	send_option = { # 改善关系
		flag = ftr_envoy_improve_relation
		localization = ftr_envoy_improve_relation_tt
		starts_enabled = { always = yes	}
	}
	send_option = { # 促进贸易
		is_valid = {
			custom_description = {
				text = ftr_orgnized_trade_recently_tt
				scope:actor = {
					NOT = { has_character_flag = ftr_orgnized_trade_recently }
				}
			}
		}
		flag = ftr_envoy_trade
		localization = ftr_envoy_trade_tt
	}
	send_option = { # 敲诈威胁
		flag = ftr_envoy_threat
		localization = ftr_envoy_threat_tt
	}
	send_option = { # 传播宗教
		is_valid = {
			NOT = { scope:recipient.faith = scope:actor.faith }
		}
		flag = ftr_envoy_religious
		localization = ftr_envoy_religious_tt
	}
	send_options_exclusive = yes
	
	on_accept = {
		scope:secondary_actor = {
			custom_tooltip = ftr_envoy_will_start_journey_tt
			hidden_effect = {
				ftr_update_luck_modifier_effect = yes
			}
		}
		scope:actor = {
			remove_short_term_gold = ftr_send_envoy_cost
			save_scope_value_as = {
				name = ftr_envoy_cost_scope_value
				value = ftr_send_envoy_cost
			}
		}
		if = {
			limit = { scope:ftr_envoy_improve_relation = yes }
			save_scope_value_as = {
				name = ftr_envoy_task_scope
				value = 1
			}
		}
		else_if = {
			limit = { scope:ftr_envoy_trade = yes }
			save_scope_value_as = {
				name = ftr_envoy_task_scope
				value = 2
			}
			custom_description = {
				text = ftr_trade_task_total_expected_income_tt
				value = ftr_trade_income_expected_value
			}
			custom_description = {
				text = ftr_trade_task_liege_expected_income_tt
				value = ftr_trade_income_expected_liege_share_value
				subject = scope:actor
			}
			custom_description = {
				text = ftr_trade_task_envoy_expected_income_tt
				value = ftr_trade_income_expected_envoy_share_value
				subject = scope:secondary_actor
			}
			hidden_effect = {
				scope:actor = {
					add_character_flag = {
						flag = ftr_orgnized_trade_recently
						months = 12
					}
				}
			}
		}
		else_if = {
			limit = { scope:ftr_envoy_threat = yes }
			save_scope_value_as = {
				name = ftr_envoy_task_scope
				value = 3
			}
		}
		else_if = {
			limit = { scope:ftr_envoy_religious = yes }
			save_scope_value_as = {
				name = ftr_envoy_task_scope
				value = 4
			}
		}
		else = { # Backup
			save_scope_value_as = {
				name = ftr_envoy_task_scope
				value = 1
			}
		}
		scope:secondary_actor = {
			trigger_event = {
				id = ftr_councillor_event.0001
				days = 3
			}
		}
	}
	ai_accept = {
		base = 20
		opinion_modifier = {
			who = scope:recipient
			opinion_target = scope:actor
			multiplier = 1
		}
		opinion_modifier = {
			who = scope:recipient
			opinion_target = scope:secondary_actor
			multiplier = 0.25
		}
		modifier = {
			add = 20
			scope:recipient = {
				is_vassal_of = scope:actor
			}
			desc = FTR_YOU_ARE_THE_LIEGE
		}
	}
	can_send = {
		scope:actor = {
			gold >= ftr_send_envoy_cost
		}
		exists = scope:secondary_actor
	}
	on_auto_accept = {}
	on_decline = {}
	#auto_accept = yes
	ai_will_do = {
		base = -10
		modifier = { # 安抚封臣
			add = 30
			scope:recipient = {
				is_vassal_of = scope:actor
				opinion = {
					target = scope:actor
					value < 40
				}
			}
			scope:ftr_envoy_improve_relation = yes
		}
		modifier = { # 异教封臣
			add = 50
			scope:recipient = {
				is_vassal_of = scope:actor
				NOT = { faith = scope:actor.faith } 
			}
			scope:ftr_envoy_religious = yes
		}
		modifier = { # 讨好君主
			add = 30
			scope:recipient = {
				this = scope:actor.liege
				opinion = {
					target = scope:actor
					value < 20
				}
			}
			scope:ftr_envoy_improve_relation = yes
		}
		modifier = { # 盟友数量
			add = {
				value = 3
				scope:actor = {
					every_ally = {
						add = -1
					}
				}
				multiply = 10
			}
			scope:ftr_envoy_improve_relation = yes
		}
		modifier = { # 讨好强邻
			add = 30
			scope:recipient = {
				OR = {
					character_is_realm_neighbor = scope:actor
					AND = { # 同僚封臣且领主无力阻止内战
						liege = scope:recipient.liege
						liege = {
							OR = {
								has_realm_law = crown_authority_0
								has_realm_law = crown_authority_1
							}
						}
						NOT = { this = scope:actor.liege }
						is_landed = yes
					}
				}
				eighty_percent_of_current_military_strength > scope:actor.current_military_strength
				opinion = {
					target = scope:actor
					value < 30
				}
			}
			scope:ftr_envoy_improve_relation = yes
		}
		modifier = { # 威胁弱邻
			add = 30
			scope:recipient = {
				OR = {
					character_is_realm_neighbor = scope:actor
					AND = { # 同僚封臣且领主无力阻止内战
						liege = scope:recipient.liege
						liege = {
							OR = {
								has_realm_law = crown_authority_0
								has_realm_law = crown_authority_1
							}
						}
						NOT = { this = scope:actor.liege }
						is_landed = yes
					}
				}
				current_military_strength < scope:actor.eighty_percent_of_current_military_strength
			}
			scope:actor = {
				opinion = {
					target = scope:recipient
					value < 30
				}
			}
			scope:ftr_envoy_threat = yes
		}
		modifier = { # 搞钱
			add = 30
			scope:actor = {
				OR = {
					gold < 500
					has_trait = greedy
					has_trait = diligent
					has_trait = ambitious
					has_trait = avaricious
				}
				ftr_trade_income_expected_liege_share_value > ftr_send_envoy_cost
			}
			scope:ftr_envoy_trade = yes
		}
		opinion_modifier = {
			who = scope:actor
			opinion_target = scope:secondary_actor
			multiplier = 0.25
		}
		opinion_modifier = {
			who = scope:actor
			opinion_target = scope:recipient
			multiplier = 0.25
		}
	}
}
